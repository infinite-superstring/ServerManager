version: '2.8'

services:
  # 数据库服务
  postgres:
    image: cr.loongnix.cn/library/postgres:13-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: 'sm_sys_data'
      POSTGRES_USER: 'ServerManager'
      POSTGRES_PASSWORD: 'ServerManager'
    volumes:
      - ServerManager_db:/var/lib/postgresql/data
    networks:
      - backend

  # 缓存
  redis:
    image: cr.loongnix.cn/library/redis:latest
    container_name: redis
    networks:
      - backend

  # 应用服务器
  django_app:
    build:
      context: .  # Dockerfile 的上下文路径
      dockerfile: Dockerfile.loongarch  # 指定要使用的 Dockerfile
    container_name: django_app
    restart: always
    environment:
      DEBUG: 'False'
      DJANGO_SETTINGS_MODULE: 'LoongArch-ServerManager.settings'
      DATABASE_URL: 'postgres://ServerManager:ServerManager@postgres:5432/sm_sys_data'
      REDIS_URL: 'redis://redis:6379'
    volumes:
      - ServerManager_app:/app/terminal_record
      - ServerManager_app:/app/group_task_run_result
      - ServerManager_app:/app/avatar
      - ServerManager_app:/app/logs
      - ServerManager_app:/app/.init
    links:
      - redis
      - postgres
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  # 编译静态资源
  build_static:
    build:
      context: ./web_develop
      dockerfile: Dockerfile.loongarch
    volumes:
      - ServerManager_static:/app/dist
    command: [ "sh", "-c", "npm install && npm run build" ]

  # 反向代理
  nginx:
    image: cr.loongnix.cn/library/nginx:1.23.1-alpine
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # 你需要在项目根目录创建nginx.conf文件
      - ./static:/www/static
    links:
      - django_app
    ports:
      - "80:80"
      - '443:443'
    depends_on:
      - build_static
      - django_app
    networks:
      - backend

volumes:
  ServerManager_db:
  ServerManager_app:
  ServerManager_static:

networks:
  backend:
