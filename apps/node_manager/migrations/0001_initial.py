# Generated by Django 4.2.13 on 2024-06-03 09:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CpuCoreUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('core_index', models.IntegerField(verbose_name='核心')),
                ('usage', models.FloatField(verbose_name='使用率')),
            ],
            options={
                'db_table': 'cpu_core_usage',
                'db_table_comment': 'CPU核心使用率数据',
            },
        ),
        migrations.CreateModel(
            name='Loadavg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('one_minute', models.FloatField(verbose_name='一分钟平均负载')),
                ('five_minute', models.FloatField(verbose_name='5分钟平均负载')),
                ('fifteen_minute', models.FloatField(verbose_name='15分钟平均负载')),
            ],
            options={
                'db_table': 'loadavg',
                'db_table_comment': '系统平均负载',
            },
        ),
        migrations.CreateModel(
            name='NetworkUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_name', models.CharField(max_length=100, verbose_name='网络端口名')),
                ('bytes_sent', models.BigIntegerField(verbose_name='发送的字节数')),
                ('bytes_recv', models.BigIntegerField(verbose_name='接收的字节数')),
            ],
            options={
                'db_table': 'network_usage',
                'db_table_comment': '网络接口负载',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='节点UUID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='节点名称')),
                ('token_hash', models.CharField(max_length=256, unique=True, verbose_name='节点Token Hash值')),
                ('token_salt', models.CharField(max_length=256, unique=True, verbose_name='节点Token盐值')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='节点简介')),
            ],
            options={
                'db_table': 'node_list',
                'db_table_comment': '节点列表',
            },
        ),
        migrations.CreateModel(
            name='Node_BaseInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_version', models.CharField(max_length=256, null=True, verbose_name='节点版本')),
                ('system', models.CharField(max_length=100, null=True, verbose_name='节点操作系统类型')),
                ('system_release', models.CharField(max_length=100, null=True, verbose_name='节点操作系统版本')),
                ('system_build_version', models.CharField(max_length=100, null=True, verbose_name='节点操作系统编译版本')),
                ('memory_total', models.BigIntegerField(null=True, verbose_name='节点内存总量')),
                ('swap_total', models.BigIntegerField(null=True, verbose_name='节点交换空间总量')),
                ('architecture', models.CharField(max_length=50, null=True, verbose_name='处理器架构')),
                ('core_count', models.IntegerField(null=True, verbose_name='处理器核心数')),
                ('processor_count', models.IntegerField(null=True, verbose_name='处理器线程数')),
                ('hostname', models.CharField(max_length=100, null=True, verbose_name='节点主机名')),
                ('boot_time', models.DateTimeField(null=True, verbose_name='节点系统运行时间')),
                ('online', models.BooleanField(default=False, verbose_name='节点在线状态')),
            ],
            options={
                'db_table': 'node_base_info',
                'db_table_comment': '节点基础信息',
            },
        ),
        migrations.CreateModel(
            name='Node_DiskPartition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=100, verbose_name='设备')),
                ('mount_point', models.CharField(max_length=100, null=True, verbose_name='挂载点')),
                ('fs_type', models.CharField(max_length=100, null=True, verbose_name='文件系统')),
                ('total', models.BigIntegerField(null=True, verbose_name='容量')),
                ('used', models.BigIntegerField(null=True, verbose_name='已用空间')),
            ],
            options={
                'db_table': 'node_disk_partition_list',
                'db_table_comment': '分区列表',
            },
        ),
        migrations.CreateModel(
            name='Node_Group',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='组ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='组名')),
                ('description', models.CharField(max_length=100, null=True, verbose_name='节点组简介')),
            ],
            options={
                'db_table': 'node_groups',
                'db_table_comment': '节点组列表',
            },
        ),
        migrations.CreateModel(
            name='Node_MessageRecipientRule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.BooleanField(verbose_name='星期一')),
                ('tuesday', models.BooleanField(verbose_name='星期二')),
                ('wednesday', models.BooleanField(verbose_name='星期三')),
                ('thursday', models.BooleanField(verbose_name='星期四')),
                ('friday', models.BooleanField(verbose_name='星期五')),
                ('saturday', models.BooleanField(verbose_name='星期六')),
                ('sunday', models.BooleanField(verbose_name='星期日')),
                ('start_time', models.CharField(max_length=8, verbose_name='开始时间')),
                ('end_time', models.CharField(max_length=8, verbose_name='结束时间')),
            ],
            options={
                'db_table': 'node_message_recipient',
                'db_table_comment': '节点消息接收人',
            },
        ),
        migrations.CreateModel(
            name='Node_Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='标签ID')),
                ('tag_name', models.CharField(max_length=100, null=True, unique=True, verbose_name='标签名')),
            ],
            options={
                'db_table': 'node_tags',
                'db_table_comment': '节点标签列表',
            },
        ),
        migrations.CreateModel(
            name='Node_UsageData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='更新时间')),
                ('cpu_usage', models.BigIntegerField(default=0, verbose_name='Cpu总体使用率')),
                ('memory_used', models.BigIntegerField(verbose_name='内存使用量')),
                ('swap_used', models.BigIntegerField(verbose_name='交换空间使用量')),
                ('disk_io_read_bytes', models.BigIntegerField(verbose_name='磁盘IO-读字节数(s/bytes)')),
                ('disk_io_write_bytes', models.BigIntegerField(verbose_name='磁盘IO-写字节数(s/bytes)')),
                ('cpu_core_usage', models.ManyToManyField(related_name='cpu_cores_usage_mapping', to='node_manager.cpucoreusage')),
                ('network_usage', models.ManyToManyField(related_name='network_usage_mapping', to='node_manager.networkusage')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node_manager.node')),
                ('system_loadavg', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='node_manager.loadavg')),
            ],
            options={
                'db_table': 'node_usage_data',
                'db_table_comment': '节点使用率数据',
            },
        ),
    ]
